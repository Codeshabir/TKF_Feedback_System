@model Tkf_Complaint_System.Models.DirectoryViewModel.Department
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">


<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row">
        <div class="col-lg-7 mb-4 order-0">

            <h2>Create Directory</h2>

            <form asp-action="Create" asp-controller="Directory" method="post">
                <div class="form-group">
                    <label asp-for="DepartmentName">Department Name</label>
                    <input asp-for="DepartmentName" class="form-control" />
                    <span asp-validation-for="DepartmentName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="OfficialEmail">Official Email</label>
                    <input asp-for="OfficialEmail" class="form-control" />
                    <span asp-validation-for="OfficialEmail" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="OfficialWebsite">Official Website</label>
                    <input asp-for="OfficialWebsite" class="form-control" />
                    <span asp-validation-for="OfficialWebsite" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="OfficialPhone">Official Phone</label>
                    <input asp-for="OfficialPhone" class="form-control" />
                    <span asp-validation-for="OfficialPhone" class="text-danger"></span>
                </div>

                <!-- First dropdown for DepartmentType -->
                <div class="form-group">
                    <label asp-for="DepartmentTypeId">Select Department</label>
                    <select id="departmentTypeDropdown" asp-for="DepartmentTypeId" class="form-control">
                        <option value=""> Select a Department</option>
                        @foreach (var item in ViewBag.DepartmentTypes)
                        {
                            <option value="@item.Id">@item.Dpt_Type</option>
                        }
                    </select>
                </div>
                <div class="form-group" id="deptSubTypeDropdownContainer">
                    <label asp-for="DeptSubTypeId">Department SubType</label>
                    <select asp-for="DeptSubTypeId" name="DeptSubTypeId" class="form-control">
                        <option value="">Select a Sub Type</option>
                        <!-- Options will be dynamically added here -->
                    </select>
                </div>


                <h3 style="margin-top:10px;">Add Person</h3>

                <div id="personsContainer">
                </div>
                <button id="addPerson" type="button" class="btn btn-success" style="margin-top:10px;"><i class="fas fa-plus"></i> Add Person + </button>
                <button id="removePerson" type="button" class="btn btn-danger" style="display: none; margin-top:10px;"><i class="fas fa-minus"></i> Remove Person -</button>
                <br />
                <button type="submit" class="btn btn-primary" style="margin-top:10px;">Create Directory</button>
                <br />
            </form>
        </div>
        <div class="col-lg-5 mb-4 order-0">
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var personCount = 0;
        function addPerson() {
            var personHtml = `
                            <div class="person-group" id="person-${personCount}">
                                <h3>Person ${personCount + 1}</h3>
                                <div class="form-group">
                                    <label asp-for="Persons[${personCount}].PersonName">Person Name</label>
                                    <input name="Persons[${personCount}].PersonName" class="form-control" />
                                    <span asp-validation-for="Persons[${personCount}].PersonName" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Persons[${personCount}].Designation">Designation</label>
                                    <input name="Persons[${personCount}].Designation" class="form-control" />
                                    <span asp-validation-for="Persons[${personCount}].Designation" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Persons[${personCount}].Phone">Person's Phone</label>
                                    <input name="Persons[${personCount}].Phone" class="form-control" />
                                    <span asp-validation-for="Persons[${personCount}].Phone" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Persons[${personCount}].Address">Address</label>
                                    <input name="Persons[${personCount}].Address" class="form-control" />
                                    <span asp-validation-for="Persons[${personCount}].Address" class="text-danger"></span>
                                </div>
                            <input type="hidden" name="departmentTypeDropdown" class="form-control" />

                            </div>
                        `;

            $("#personsContainer").append(personHtml);
            personCount++;

            $("#removePerson").show();
        }

        $("#addPerson").click(function () {
            addPerson();
        });

        function removeLastPerson() {
            if (personCount > 0) {
                personCount--;
                $("#person-" + personCount).remove();

                $("#removePerson").toggle(personCount > 0);
            }
        }

        $("#removePerson").click(function () {
            removeLastPerson();
        });

    });

    $("#departmentTypeDropdown").change(function () {
        var selectedDepartmentTypeId = $(this).val();

        if (!selectedDepartmentTypeId) {
            $("#deptSubTypeDropdownContainer").hide();
            return;
        }

        $.ajax({
            url: '/directory/GetDeptSubTypes',
            method: 'GET',
            data: { departmentTypeId: selectedDepartmentTypeId },
            success: function (data) {
                console.log("Received data:", data);

                var $deptSubTypeDropdown = $("#DeptSubTypeId");

                // Clear existing options
                $deptSubTypeDropdown.empty();

                // Add default option
                $deptSubTypeDropdown.append('<option value="">Select a Sub Type</option>');

                // Add options dynamically
                $.each(data, function (index, item) {
                    debugger;
                    console.log("Processing item:", item);
                    $deptSubTypeDropdown.append(`<option value="${item.Id}">${item.subType_Name}</option>`);
                });

                // Show the container
                $("#deptSubTypeDropdownContainer").show();
            },
            error: function () {
                console.error("Failed to fetch DeptSubTypes.");
            }
        });
    });


</script>

